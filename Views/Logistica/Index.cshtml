<h1 class="text-center my-4">Logistica de reportes</h1>

<div>
    <div class="row">
        <div class="col">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Nombre del Cliente</th>
                        <th>Falla</th>
                        <th>Estado</th>
                        <th>Prioridad</th>
                        <th>Técnico</th>
                    </tr>
                </thead>
                <tbody id="tablaReportes">

                </tbody>
            </table>
        </div>

        <div class="col" id="EditarReporte">
            <div class="mb-4">
                <h1 class="text-center">Editar Reporte</h1>
            </div>
            <form class="p-4 border rounded shadow-sm bg-light">
                <div class="mb-3">
                    <label for="estado" class="form-label">Estado</label>
                    <select class="form-select" id="estado" required>
                        <option value="Pendiente">Pendiente</option>
                        <option value="En proceso">En proceso</option>
                        <option value="Resuelto">Resuelto</option>
                        <option value="Cancelado">Cancelado</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="prioridad" class="form-label">Prioridad</label>
                    <select class="form-select" id="prioridad" required>
                        <option value="Alta">Alta</option>
                        <option value="Media">Media</option>
                        <option value="Baja">Baja</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="tecnico" class="form-label">Técnico</label>
                    <select class="form-select" id="tecnico" required>
                        <option value="Phantom">Phantom</option>
                        <option value="Jafet">Jafet</option>
                        <option value="Luis">Luis</option>
                        <option value="Erick">Erick</option>
                        <option value="Yahir">Yahir</option>
                        <option value="Cande">Cande</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="fechaRespuesta" class="form-label">Fecha de Respuesta</label>
                    <input type="date" class="form-control" id="fechaRespuesta" required>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary px-4" id="EnviarTecnico">Enviar al técnico</button>
                </div>
            </form>
        </div>
        <div>
            <canvas id="MyChart"></canvas>
        </div>
    </div>
</div>

<script src="~/js/signalR.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
    const ctx = document.getElementById('MyChart');
    const myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ["Numero de reportes recibidos"],
            datasets: [{
                label: 'Cantidad de Reportes',
                data: [0, 0, 0, 0],
                backgroundColor: [
                    'rgba(90, 120, 100, 0.6)',
                ],
                borderColor: [
                    'rgba(90, 120, 100, 1)',
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });


    let Reporte = null;
    const EditarReporte = document.getElementById("EditarReporte");
    const EnviarTecnico = document.getElementById("EnviarTecnico");
    let reportes = [];
    EditarReporte.style.display = "none";
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/ReporteHub")
        .build();
    function llenarTabla() {
        let tbodytablaReportes = document.getElementById("tablaReportes");
        tbodytablaReportes.innerHTML = "";
        reportes.forEach(reporte => {
            let fila = document.createElement("tr");
            let celdaNombreCliente = document.createElement("td");
            let celdaFallo = document.createElement("td");
            let celdaEstado = document.createElement("td");
            let celdaPrioridad = document.createElement("td");
            let celdaTecnico = document.createElement("td");
            let celdaEditar = document.createElement("td");
            let botonEditar = document.createElement("button");
            botonEditar.innerHTML = '<i class="bi bi-pencil-square"></i> Editar';
            botonEditar.className = "btn btn-success";
            botonEditar.addEventListener("click", () => {
                Reporte = reporte;
                EditarReporte.style.display = "block";
                document.getElementById("fechaRespuesta").value=Reporte.fechaRespuesta;
                console.log("Reporte seleccionado:", Reporte);
            });
            celdaEditar.appendChild(botonEditar);
            celdaNombreCliente.textContent = reporte.nombreCliente;
            celdaFallo.textContent = reporte.fallo;
            celdaEstado.textContent = reporte.estado;
            celdaPrioridad.textContent = reporte.prioridad;
            celdaTecnico.textContent = reporte.tecnico;

            fila.appendChild(celdaNombreCliente);
            fila.appendChild(celdaFallo);
            fila.appendChild(celdaEstado);
            fila.appendChild(celdaPrioridad);
            fila.appendChild(celdaTecnico);
            fila.appendChild(celdaEditar);
            tbodytablaReportes.appendChild(fila);
        });
    }

    function obtenerReportes() {

        fetch("http://localhost:5157/Transacciones/GetReportes", {
            method: "GET",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Error: ${response.status} ${response.statusText}`);
                }
                return response.json();
            })
            .then(data => {
                reportes = data;
                console.log("Reportes obtenidos:", reportes);
                myChart.data.datasets[0].data = [reportes.length];
                llenarTabla();
                myChart.update();

            })
            .catch(error => {
                console.error("Error al obtener los reportes:", error);
            });
    }
    connection.start().then(() => {
        connection.invoke("AddToGroup", "Logistica").catch(err => console.error(err.toString()));
        console.log("Conexión exitosa");
    }).catch(err => console.error(err.toString()));

    connection.on("RecibirReporte", (reporte) => {

        if (reporte && reporte.nombreCliente && reporte.fallo) {
            const nombreCliente = reporte.nombreCliente;
            alert("Nuevo Reporte de: " + nombreCliente + "\n" + "Con falla de: " + reporte.fallo);
            obtenerReportes();
        } else {
            console.error("El objeto reporte no contiene la propiedad nombreCliente o es nulo:", reporte);
        }
    });
    EnviarTecnico.addEventListener('click', () => {
        const ReporteEdiar = Reporte;
        ReporteEdiar.estado = document.getElementById("estado").value;
        ReporteEdiar.prioridad = document.getElementById("prioridad").value;
        ReporteEdiar.tecnico = document.getElementById("tecnico").value;
        ReporteEdiar.fechaRespuesta = document.getElementById("fechaRespuesta").value;
        console.log("Reporte a enviar al técnico:", ReporteEdiar);
        fetch("http://localhost:5157/Transacciones/actualizarReporte", {
            method: "POST",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify(Reporte)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Error: ${response.status} ${response.statusText}`);
                }
                return response.json();
            })
            .then(json => {
                console.log(json);
                if (json.mensaje === "Reporte actualizado") {
                    alert("Reporte editado exitosamente");
                    Reporte = null;
                    EditarReporte.style.display = "none";
                    llenarTabla();
                    alert("Reporte enviado al técnico exitosamente");
                    connection.invoke("SendReporte", "Tecnicos", ReporteEdiar).catch(err => console.error("Error al invocar SendReporte:", err.toString()));
                } else {
                    alert("Error al editar el reporte: " + json.mensaje);
                }
            })
            .catch(error => {
                console.error("Error al editar el reporte:", error);
                alert("Error al editar el reporte: " + error.message);
            });
    });

obtenerReportes();



</script>
