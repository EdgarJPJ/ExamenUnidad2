@{
    ViewData["Title"] = "Geolocalización con SignalR";
}

<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="~/js/signalR.js"></script>
    <style>
        #map {
            height: 250px;
            width: 100%;
        }

        #form-container {
            display: none;
            margin-top: 20px;
        }
    </style>
</head>

<body>
    <h1>Raccoon Mobile service</h1>
    <div>
        <h2>¿Tienes problemas con tu línea?</h2>
        <div class="container">
            <div class="row">
                <div id="button-container" class="col">
                    <button class="btn btn-primary" id="Ubicacion">Reportar</button>
                    <button class="btn btn-secondary" id="ReportarOtraLinea">Reportar otra linea</button>
                </div>
            </div>
        </div>
        <br>
        <div id="map" class="rounded-3"></div>
        <div id="form-container" class="mt-5">
            <h2>Registro de Datos del Cliente</h2>
            <form>
                <div class="mb-3">
                    <label for="nombreCliente" class="form-label">Nombre del Cliente</label>
                    <input type="text" class="form-control" id="nombreCliente"
                        placeholder="Ingrese el nombre del cliente" required>
                </div>

                <div class="mb-3">
                    <label for="fallo" class="form-label">Fallo</label>
                    <textarea class="form-control" id="fallo" rows="3" placeholder="Describa el fallo"
                        required></textarea>
                </div>



                <button type="button" class="btn btn-primary" id="enviar">Registrar</button>
            </form>
        </div>
    </div>
        <script>

        const boton = document.getElementById("Ubicacion");
        const otraLinea = document.getElementById("ReportarOtraLinea");
        const enviar = document.getElementById("enviar");
        const nombreCliente = document.getElementById("nombreCliente");
        const fallo = document.getElementById("fallo");

        otraLinea.disabled = true;
        let latitud;
        let longitud;
        let map;
        let marker;

        function getubicacion() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, errorPosition);
            } else {
                alert("La geolocalización no es soportada por este navegador.");
            }
        }

        boton.addEventListener("click", () => {
            getubicacion();
            boton.disabled = true;
            otraLinea.disabled = false;
            document.getElementById('form-container').style.display = 'block';
        });

        otraLinea.addEventListener("click", () => {
            if (marker) {
                marker.remove();
                marker = null;
            }
            map.on('click', onMapClick);
        });

        function showPosition(position) {
            latitud = position.coords.latitude;
            longitud = position.coords.longitude;

            if (!map) {
                map = L.map('map').setView([latitud, longitud], 19);

                L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
            } else {
                map.setView([latitud, longitud], 19);
            }
            if (marker) {
                marker.remove();
            }
            marker = L.marker([latitud, longitud]).addTo(map)
                .bindPopup('Estas aquí')
                .openPopup();
        }

        function onMapClick(e) {
            if (marker) {
                marker.remove();
            }
            marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map)
                .bindPopup('Nueva ubicación')
                .openPopup();
            latitud = e.latlng.lat;
            longitud = e.latlng.lng;
            
        }

        function errorPosition(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    alert("El usuario no permitió la geolocalización");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("La información de ubicación no está disponible");
                    break;
                case error.TIMEOUT:
                    alert("La solicitud para obtener la ubicación del usuario ha expirado");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("Un error desconocido ocurrió");
                    break;
            }
        }

        enviar.addEventListener("click", () => {
        const reporte = {
            id : 0,
            longitude: longitud,
            latitude: latitud,
            nombreCliente: nombreCliente.value,
            fallo: fallo.value,
            estado: "N/A",
            prioridad: "N/A",
            fechaEnvio: new Date().toISOString(),
            fechaRespuesta: "N/A",
            fechaResolucion: "N/A",
            tecnico: "N/A"
        };

        fetch("http://localhost:5157/Transacciones/agregarReporte", {
            method: "POST",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify(reporte)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`Error: ${response.status} ${response.statusText}`);
            }
            return response.json();
        })
        .then(json => {
            console.log(json);
            if (json.mensaje === "Reporte agregado") {
                alert("Reporte enviado exitosamente");
            } else {
                alert("Error al enviar el reporte: " + json.mensaje);
            }
        })
        .catch(error => {
            console.error("Error al enviar el reporte:", error);
            alert("Error al enviar el reporte: " + error.message);
        });
    });

        const connection = new signalR.HubConnectionBuilder().withUrl("/reporteHub").build();
    connection.start().then(() => {
            connection.invoke("AddToGroup", "Logistica").catch(err => console.error(err.toString()));
            console.log("Conexión exitosa");
        }).catch(err => console.error(err.toString()));
        
    </script>
</body>

</html>